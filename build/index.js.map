{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/db.server.ts", "../app/routes/healthcheck.tsx", "../app/routes/posts/$slug.tsx", "../app/models/post.server.ts", "../app/routes/posts/admin.tsx", "../app/routes/posts/admin/$slug.tsx", "../app/routes/posts/admin/index.tsx", "../app/routes/posts/admin/new.tsx", "../app/routes/posts/index.tsx", "../app/routes/logout.tsx", "../app/routes/index.tsx", "../app/routes/login.tsx", "../app/utils.ts", "../app/routes/notes.tsx", "../app/models/note.server.ts", "../app/routes/notes/$noteId.tsx", "../app/routes/notes/index.tsx", "../app/routes/notes/new.tsx", "../app/routes/join.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { PassThrough } from \"stream\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport { Response } from \"@remix-run/node\";\r\nimport type { EntryContext, Headers } from \"@remix-run/node\";\r\nimport isbot from \"isbot\";\r\n\r\nconst ABORT_DELAY = 5000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\r\n    ? \"onAllReady\"\r\n    : \"onShellReady\";\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let didError = false;\r\n\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer context={remixContext} url={request.url} />,\r\n      {\r\n        [callbackName]() {\r\n          let body = new PassThrough();\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(body, {\r\n              status: didError ? 500 : responseStatusCode,\r\n              headers: responseHeaders,\r\n            })\r\n          );\r\n          pipe(body);\r\n        },\r\n        onShellError(err: unknown) {\r\n          reject(err);\r\n        },\r\n        onError(error: unknown) {\r\n          didError = true;\r\n          console.error(error);\r\n        },\r\n      }\r\n    );\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import type { LinksFunction, LoaderArgs, MetaFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from \"@remix-run/react\";\r\n\r\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\r\nimport { getUser } from \"./session.server\";\r\n\r\nexport const links: LinksFunction = () => {\r\n  return [{ rel: \"stylesheet\", href: tailwindStylesheetUrl }];\r\n};\r\n\r\nexport const meta: MetaFunction = () => ({\r\n  charset: \"utf-8\",\r\n  title: \"Web Studios Blog\",\r\n  viewport: \"width=device-width,initial-scale=1\",\r\n});\r\n\r\nexport async function loader({ request }: LoaderArgs) {\r\n  return json({\r\n    user: await getUser(request),\r\n  });\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <html lang=\"en\" className=\"h-full\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body className=\"h-full\">\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\nimport type { User } from \"~/models/user.server\";\r\nimport { getUserById } from \"~/models/user.server\";\r\n\r\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\r\n\r\nexport const sessionStorage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"__session\",\r\n    httpOnly: true,\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    secrets: [process.env.SESSION_SECRET],\r\n    secure: process.env.NODE_ENV === \"production\",\r\n  },\r\n});\r\n\r\nconst USER_SESSION_KEY = \"userId\";\r\n\r\nexport async function getSession(request: Request) {\r\n  const cookie = request.headers.get(\"Cookie\");\r\n  return sessionStorage.getSession(cookie);\r\n}\r\n\r\nexport async function getUserId(\r\n  request: Request\r\n): Promise<User[\"id\"] | undefined> {\r\n  const session = await getSession(request);\r\n  const userId = session.get(USER_SESSION_KEY);\r\n  return userId;\r\n}\r\n\r\nexport async function getUser(request: Request) {\r\n  const userId = await getUserId(request);\r\n  if (userId === undefined) return null;\r\n\r\n  const user = await getUserById(userId);\r\n  if (user) return user;\r\n\r\n  throw await logout(request);\r\n}\r\n\r\nexport async function requireUserId(\r\n  request: Request,\r\n  redirectTo: string = new URL(request.url).pathname\r\n) {\r\n  const userId = await getUserId(request);\r\n  if (!userId) {\r\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\r\n    throw redirect(`/login?${searchParams}`);\r\n  }\r\n  return userId;\r\n}\r\n\r\nexport async function requireUser(request: Request) {\r\n  const userId = await requireUserId(request);\r\n\r\n  const user = await getUserById(userId);\r\n  if (user) return user;\r\n\r\n  throw await logout(request);\r\n}\r\n\r\nexport async function createUserSession({\r\n  request,\r\n  userId,\r\n  remember,\r\n  redirectTo,\r\n}: {\r\n  request: Request;\r\n  userId: string;\r\n  remember: boolean;\r\n  redirectTo: string;\r\n}) {\r\n  const session = await getSession(request);\r\n  session.set(USER_SESSION_KEY, userId);\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\r\n        maxAge: remember\r\n          ? 60 * 60 * 24 * 7 // 7 days\r\n          : undefined,\r\n      }),\r\n    },\r\n  });\r\n}\r\n\r\nexport async function logout(request: Request) {\r\n  const session = await getSession(request);\r\n  return redirect(\"/\", {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\r\n    },\r\n  });\r\n}\r\n", "import type { Password, User } from \"@prisma/client\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { User } from \"@prisma/client\";\r\n\r\nexport async function getUserById(id: User[\"id\"]) {\r\n  return prisma.user.findUnique({ where: { id } });\r\n}\r\n\r\nexport async function getUserByEmail(email: User[\"email\"]) {\r\n  return prisma.user.findUnique({ where: { email } });\r\n}\r\n\r\nexport async function createUser(email: User[\"email\"], password: string) {\r\n  const hashedPassword = await bcrypt.hash(password, 10);\r\n\r\n  return prisma.user.create({\r\n    data: {\r\n      email,\r\n      password: {\r\n        create: {\r\n          hash: hashedPassword,\r\n        },\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nexport async function deleteUserByEmail(email: User[\"email\"]) {\r\n  return prisma.user.delete({ where: { email } });\r\n}\r\n\r\nexport async function verifyLogin(\r\n  email: User[\"email\"],\r\n  password: Password[\"hash\"]\r\n) {\r\n  const userWithPassword = await prisma.user.findUnique({\r\n    where: { email },\r\n    include: {\r\n      password: true,\r\n    },\r\n  });\r\n\r\n  if (!userWithPassword || !userWithPassword.password) {\r\n    return null;\r\n  }\r\n\r\n  const isValid = await bcrypt.compare(\r\n    password,\r\n    userWithPassword.password.hash\r\n  );\r\n\r\n  if (!isValid) {\r\n    return null;\r\n  }\r\n\r\n  const { password: _password, ...userWithoutPassword } = userWithPassword;\r\n\r\n  return userWithoutPassword;\r\n}\r\n", "import { PrismaClient } from \"@prisma/client\";\r\n\r\nlet prisma: PrismaClient;\r\n\r\ndeclare global {\r\n  var __db__: PrismaClient;\r\n}\r\n\r\n// this is needed because in development we don't want to restart\r\n// the server with every change, but we want to make sure we don't\r\n// create a new connection to the DB with every change either.\r\n// in production we'll have a single connection to the DB.\r\nif (process.env.NODE_ENV === \"production\") {\r\n  prisma = new PrismaClient();\r\n} else {\r\n  if (!global.__db__) {\r\n    global.__db__ = new PrismaClient();\r\n  }\r\n  prisma = global.__db__;\r\n  prisma.$connect();\r\n}\r\n\r\nexport { prisma };\r\n", "// learn more: https://fly.io/docs/reference/configuration/#services-http_checks\r\nimport type { LoaderArgs } from \"@remix-run/node\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport async function loader({ request }: LoaderArgs) {\r\n  const host =\r\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\r\n\r\n  try {\r\n    const url = new URL(\"/\", `http://${host}`);\r\n    // if we can connect to the database and make a simple query\r\n    // and make a HEAD request to ourselves, then we're good.\r\n    await Promise.all([\r\n      prisma.user.count(),\r\n      fetch(url.toString(), { method: \"HEAD\" }).then((r) => {\r\n        if (!r.ok) return Promise.reject(r);\r\n      }),\r\n    ]);\r\n    return new Response(\"OK\");\r\n  } catch (error: unknown) {\r\n    console.log(\"healthcheck \u274C\", { error });\r\n    return new Response(\"ERROR\", { status: 500 });\r\n  }\r\n}\r\n", "import { marked } from \"marked\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { getPost } from \"~/models/post.server\";\r\n\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\nimport type { Post } from \"~/models/post.server\";\r\n\r\ntype LoaderData = { post: Post; html: string };\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n  invariant(params.slug, `params.slug is required`);\r\n\r\n  const post = await getPost(params.slug);\r\n  invariant(post, `Post not found: ${params.slug}`);\r\n\r\n  const html = marked(post.markdown);\r\n  return json<LoaderData>({ post, html });\r\n};\r\n\r\nexport default function PostSlug() {\r\n  const { post, html } = useLoaderData() as LoaderData;\r\n  return (\r\n    <main className=\"mx-auto max-w-4xl\">\r\n      <h1 className=\"my-6 border-b-2 text-center text-3xl\">{post.title}</h1>\r\n      <div dangerouslySetInnerHTML={{ __html: html }} />\r\n    </main>\r\n  );\r\n}\r\n", "import { prisma } from \"~/db.server\";\r\nimport type { Post } from \"@prisma/client\";\r\nexport type { Post };\r\n\r\nexport async function getPosts() {\r\n  return prisma.post.findMany();\r\n}\r\n\r\nexport async function getPost(slug: string): Promise<Post> {\r\n  return prisma.post.findUnique({ where: { slug } });\r\n}\r\n\r\nexport async function createPost(post: Pick<Post, \"slug\" | \"title\" | \"markdown\">) {\r\n  return prisma.post.create({ data: post });\r\n}\r\n", "import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData, Outlet } from \"@remix-run/react\";\r\n\r\nimport { getPosts } from \"~/models/post.server\";\r\n\r\ntype LoaderData = {\r\n  posts: Awaited<ReturnType<typeof getPosts>>;\r\n};\r\n\r\nexport const loader: LoaderFunction = async () => {\r\n  return json({ posts: await getPosts() });\r\n};\r\n\r\nexport default function PostAdmin() {\r\n  const { posts } = useLoaderData() as LoaderData;\r\n  return (\r\n    <div className=\"mx-auto max-w-4xl\">\r\n      <h1 className=\"my-6 mb-2 border-b-2 text-center text-3xl\">Blog Admin</h1>\r\n      <div className=\"grid grid-cols-4 gap-6\">\r\n        <nav className=\"col-span-4 md:col-span-1\">\r\n          <ul>\r\n            {posts.map((post) => (\r\n              <li key={post.slug}>\r\n                <Link to={post.slug} className=\"text-blue-600 underline\">\r\n                  {post.title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n        <main className=\"col-span-4 md:col-span-3\">\r\n          <Outlet />\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { json, redirect } from \"@remix-run/node\";\r\nimport { marked } from \"marked\";\r\nimport invariant from \"tiny-invariant\";\r\nimport { createPost, getPost } from \"~/models/post.server\";\r\nimport type { Post } from \"~/models/post.server\";\r\nimport type { LoaderFunction, ActionFunction } from \"@remix-run/node\";\r\nimport {\r\n  Form,\r\n  useActionData,\r\n  useLoaderData,\r\n  useTransition,\r\n} from \"@remix-run/react\";\r\nimport { useState } from \"react\";\r\n\r\ntype LoaderData = { post: Post; html: string };\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n  invariant(params.slug, `params.slug is required`);\r\n\r\n  const post = await getPost(params.slug);\r\n  invariant(post, `Post not found: ${params.slug}`);\r\n\r\n  const html = marked(post.markdown);\r\n  return json<LoaderData>({ post, html });\r\n};\r\n\r\nconst inputClassName = `w-full rounded border border-gray-500 px-2 py-1 text-lg`;\r\n\r\ntype ActionData =\r\n  | {\r\n      title: null | string;\r\n      slug: null | string;\r\n      markdown: null | string;\r\n    }\r\n  | undefined;\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n\r\n  const title = formData.get(\"title\");\r\n  const slug = formData.get(\"slug\");\r\n  const markdown = formData.get(\"markdown\");\r\n\r\n  invariant(typeof title === \"string\", \"title must be a string\");\r\n  invariant(typeof slug === \"string\", \"slug must be a string\");\r\n  invariant(typeof markdown === \"string\", \"markdown must be a string\");\r\n\r\n  const errors: ActionData = {\r\n    title: title ? null : \"Title is required\",\r\n    slug: slug ? null : \"Slug is required\",\r\n    markdown: markdown ? null : \"Markdown is required\",\r\n  };\r\n\r\n  const hasErrors = Object.values(errors).some((errorMessage) => errorMessage);\r\n  if (hasErrors) {\r\n    return json<ActionData>(errors);\r\n  }\r\n\r\n  await createPost({ title, slug, markdown });\r\n\r\n  return redirect(\"/posts/admin\");\r\n};\r\n\r\nexport default function ManagePost() {\r\n  const { post } = useLoaderData() as LoaderData;\r\n  const errors = useActionData();\r\n\r\n  const transition = useTransition();\r\n  const isUpdating = Boolean(transition.submission);\r\n  const [test, setTest] = useState('')\r\n\r\n  return (\r\n    <Form method=\"post\">\r\n      <p>\r\n        <label>\r\n          Post Title:{\" \"}\r\n          {errors?.title ? (\r\n            <em className=\"text-red-600\">{errors.title}</em>\r\n          ) : null}\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            className={inputClassName}\r\n            defaultValue={post.title}\r\n          />\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label>\r\n          Post Slug:{\" \"}\r\n          {errors?.slug ? (\r\n            <em className=\"text-red-600\">{errors.slug}</em>\r\n          ) : null}\r\n          <input\r\n            type=\"text\"\r\n            name=\"slug\"\r\n            className={inputClassName}\r\n            defaultValue={post.slug}\r\n          />\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label htmlFor=\"markdown\">\r\n          Markdown:{\" \"}\r\n          {errors?.markdown ? (\r\n            <em className=\"text-red-600\">{errors.markdown}</em>\r\n          ) : null}\r\n        </label>\r\n        <br />\r\n        {/* <textarea\r\n          id=\"markdown\"\r\n          rows={20}\r\n          name=\"markdown\"\r\n          className={`${inputClassName} font-mono`}\r\n          defaultValue={post.markdown}\r\n        /> */}\r\n        <textarea\r\n          value={test || post.markdown}\r\n          name=\"markdown\"\r\n          id=\"\"\r\n          rows={20}\r\n          className={`${inputClassName} font-mono`}\r\n          onChange={(e) => {\r\n            console.log(\"e.target.value\", e.target.value);\r\n            setTest(e.target.value)\r\n            console.log(\"post.markdown\", test);\r\n          }}\r\n        />\r\n      </p>\r\n      <p className=\"text-right\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"rounded bg-blue-500 py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400 disabled:bg-blue-300\"\r\n          disabled={isUpdating}\r\n        >\r\n          {isUpdating ? \"Updating...\" : \"Update Post\"}\r\n        </button>\r\n      </p>\r\n    </Form>\r\n  );\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\n\r\nexport default function AdminIndex() {\r\n  return (\r\n    <p>\r\n      <Link to=\"new\" className=\"text-blue-600 underline\">\r\n        Create a New Post\r\n      </Link>\r\n    </p>\r\n  );\r\n}\r\n", "import { redirect, json } from \"@remix-run/node\";\r\nimport { Form, useActionData, useTransition } from \"@remix-run/react\";\r\n\r\nimport { createPost } from \"~/models/post.server\";\r\nimport type { ActionFunction } from \"@remix-run/node\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\nconst inputClassName = `w-full rounded border border-gray-500 px-2 py-1 text-lg`;\r\n\r\ntype ActionData =\r\n  | {\r\n      title: null | string;\r\n      slug: null | string;\r\n      markdown: null | string;\r\n    }\r\n  | undefined;\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n\r\n  const title = formData.get(\"title\");\r\n  const slug = formData.get(\"slug\");\r\n  const markdown = formData.get(\"markdown\");\r\n\r\n  invariant(typeof title === \"string\", \"title must be a string\");\r\n  invariant(typeof slug === \"string\", \"slug must be a string\");\r\n  invariant(typeof markdown === \"string\", \"markdown must be a string\");\r\n\r\n  const errors: ActionData = {\r\n    title: title ? null : \"Title is required\",\r\n    slug: slug ? null : \"Slug is required\",\r\n    markdown: markdown ? null : \"Markdown is required\",\r\n  };\r\n\r\n  const hasErrors = Object.values(errors).some((errorMessage) => errorMessage);\r\n  if (hasErrors) {\r\n    return json<ActionData>(errors);\r\n  }\r\n\r\n  await createPost({ title, slug, markdown });\r\n\r\n  return redirect(\"/posts/admin\");\r\n};\r\n\r\nexport default function NewPost() {\r\n  const errors = useActionData();\r\n  const transition = useTransition();\r\n  const isCreating = Boolean(transition.submission);\r\n  return (\r\n    <Form method=\"post\">\r\n      <p>\r\n        <label>\r\n          Post Title:{\" \"}\r\n          {errors?.title ? (\r\n            <em className=\"text-red-600\">{errors.title}</em>\r\n          ) : null}\r\n          <input type=\"text\" name=\"title\" className={inputClassName} />\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label>\r\n          Post Slug:{\" \"}\r\n          {errors?.slug ? (\r\n            <em className=\"text-red-600\">{errors.slug}</em>\r\n          ) : null}\r\n          <input type=\"text\" name=\"slug\" className={inputClassName} />\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label htmlFor=\"markdown\">\r\n          Markdown:{\" \"}\r\n          {errors?.markdown ? (\r\n            <em className=\"text-red-600\">{errors.markdown}</em>\r\n          ) : null}\r\n        </label>\r\n        <br />\r\n        <textarea\r\n          id=\"markdown\"\r\n          rows={20}\r\n          name=\"markdown\"\r\n          className={`${inputClassName} font-mono`}\r\n        />\r\n      </p>\r\n      <p className=\"text-right\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"rounded bg-blue-500 py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400 disabled:bg-blue-300\"\r\n          disabled={isCreating}\r\n        >\r\n          {isCreating ? \"Creating...\" : \"Create Post\"}\r\n        </button>\r\n      </p>\r\n    </Form>\r\n  );\r\n}\r\n", "import { json } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\n\r\nimport { getPosts } from \"~/models/post.server\";\r\n\r\ntype LoaderData = {\r\n  // this is a handy way to say: \"posts is whatever type getPosts resolves to\"\r\n  posts: Awaited<ReturnType<typeof getPosts>>;\r\n};\r\n\r\nexport const loader = async () => {\r\n  return json<LoaderData>({\r\n    posts: await getPosts(),\r\n  });\r\n};\r\n\r\nexport default function Posts() {\r\n  const { posts } = useLoaderData() as LoaderData;\r\n  console.log(posts);\r\n\r\n  return (\r\n    <main>\r\n      <Link to=\"admin\" className=\"text-red-600 underline\">\r\n        Admin\r\n      </Link>\r\n      <ul>\r\n        {posts.map((post) => (\r\n          <li key={post.slug}>\r\n            <Link to={post.slug} className=\"text-blue-600 underline\">\r\n              {post.title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </main>\r\n  );\r\n}\r\n", "import type { ActionArgs } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\n\r\nimport { logout } from \"~/session.server\";\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  return logout(request);\r\n}\r\n\r\nexport async function loader() {\r\n  return redirect(\"/\");\r\n}\r\n", "import { json } from \"@remix-run/node\";\r\nimport { getPosts } from \"~/models/post.server\";\r\n\r\ntype LoaderData = {\r\n  posts: Awaited<ReturnType<typeof getPosts>>;\r\n};\r\n\r\nexport const loader = async () => {\r\n  return json<LoaderData>({\r\n    posts: await getPosts(),\r\n  });\r\n};\r\n\r\nexport default function Index() {\r\n  return (\r\n    <div className=\"min-h-full\">\r\n      <nav className=\"border-b border-gray-200 bg-white\">\r\n        <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex h-16 justify-between\">\r\n            <div className=\"flex\">\r\n              <div className=\"flex flex-shrink-0 items-center\">\r\n                <img\r\n                  className=\"block h-8 w-auto lg:hidden\"\r\n                  src=\"https://tailwindui.com/img/logos/workflow-mark.svg?color=indigo&shade=600\"\r\n                  alt=\"Workflow\"\r\n                />\r\n                <img\r\n                  className=\"hidden h-8 w-auto lg:block\"\r\n                  src=\"https://tailwindui.com/img/logos/workflow-mark.svg?color=indigo&shade=600\"\r\n                  alt=\"Workflow\"\r\n                />\r\n              </div>\r\n              <div className=\"hidden sm:-my-px sm:ml-6 sm:flex sm:space-x-8\">\r\n                <button\r\n                  className=\"inline-flex items-center border-b-2 border-indigo-500 px-1 pt-1 text-sm font-medium text-gray-900\"\r\n                  aria-current=\"page\"\r\n                >\r\n                  Blog\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"py-10\">\r\n        <header>\r\n          <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\r\n            <h1 className=\"text-3xl font-bold leading-tight tracking-tight text-gray-900\">\r\n              Dashboard\r\n            </h1>\r\n          </div>\r\n        </header>\r\n        <main>\r\n          <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\r\n            {/* <!-- Replace with your content --> */}\r\n            <div className=\"px-4 py-8 sm:px-0\">\r\n              <div className=\"h-96 rounded-lg border-4 border-dashed border-gray-200\"></div>\r\n            </div>\r\n            {/* <!-- /End replace --> */}\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionArgs, LoaderArgs, MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\r\nimport * as React from \"react\";\r\n\r\nimport { createUserSession, getUserId } from \"~/session.server\";\r\nimport { verifyLogin } from \"~/models/user.server\";\r\nimport { safeRedirect, validateEmail } from \"~/utils\";\r\n\r\nexport async function loader({ request }: LoaderArgs) {\r\n  const userId = await getUserId(request);\r\n  if (userId) return redirect(\"/\");\r\n  return json({});\r\n}\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const formData = await request.formData();\r\n  const email = formData.get(\"email\");\r\n  const password = formData.get(\"password\");\r\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/notes\");\r\n  const remember = formData.get(\"remember\");\r\n\r\n  if (!validateEmail(email)) {\r\n    return json(\r\n      { errors: { email: \"Email is invalid\", password: null } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof password !== \"string\" || password.length === 0) {\r\n    return json(\r\n      { errors: { email: null, password: \"Password is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (password.length < 8) {\r\n    return json(\r\n      { errors: { email: null, password: \"Password is too short\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const user = await verifyLogin(email, password);\r\n\r\n  if (!user) {\r\n    return json(\r\n      { errors: { email: \"Invalid email or password\", password: null } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  return createUserSession({\r\n    request,\r\n    userId: user.id,\r\n    remember: remember === \"on\" ? true : false,\r\n    redirectTo,\r\n  });\r\n}\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return {\r\n    title: \"Login\",\r\n  };\r\n};\r\n\r\nexport default function LoginPage() {\r\n  const [searchParams] = useSearchParams();\r\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/notes\";\r\n  const actionData = useActionData<typeof action>();\r\n  const emailRef = React.useRef<HTMLInputElement>(null);\r\n  const passwordRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (actionData?.errors?.email) {\r\n      emailRef.current?.focus();\r\n    } else if (actionData?.errors?.password) {\r\n      passwordRef.current?.focus();\r\n    }\r\n  }, [actionData]);\r\n\r\n  return (\r\n    <div className=\"flex min-h-full flex-col justify-center\">\r\n      <div className=\"mx-auto w-full max-w-md px-8\">\r\n        <Form method=\"post\" className=\"space-y-6\">\r\n          <div>\r\n            <label\r\n              htmlFor=\"email\"\r\n              className=\"block text-sm font-medium text-gray-700\"\r\n            >\r\n              Email address\r\n            </label>\r\n            <div className=\"mt-1\">\r\n              <input\r\n                ref={emailRef}\r\n                id=\"email\"\r\n                required\r\n                autoFocus={true}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                aria-invalid={actionData?.errors?.email ? true : undefined}\r\n                aria-describedby=\"email-error\"\r\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\r\n              />\r\n              {actionData?.errors?.email && (\r\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\r\n                  {actionData.errors.email}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"password\"\r\n              className=\"block text-sm font-medium text-gray-700\"\r\n            >\r\n              Password\r\n            </label>\r\n            <div className=\"mt-1\">\r\n              <input\r\n                id=\"password\"\r\n                ref={passwordRef}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                aria-invalid={actionData?.errors?.password ? true : undefined}\r\n                aria-describedby=\"password-error\"\r\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\r\n              />\r\n              {actionData?.errors?.password && (\r\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\r\n                  {actionData.errors.password}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\r\n          >\r\n            Log in\r\n          </button>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember\"\r\n                name=\"remember\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n              />\r\n              <label\r\n                htmlFor=\"remember\"\r\n                className=\"ml-2 block text-sm text-gray-900\"\r\n              >\r\n                Remember me\r\n              </label>\r\n            </div>\r\n            <div className=\"text-center text-sm text-gray-500\">\r\n              Don't have an account?{\" \"}\r\n              <Link\r\n                className=\"text-blue-500 underline\"\r\n                to={{\r\n                  pathname: \"/join\",\r\n                  search: searchParams.toString(),\r\n                }}\r\n              >\r\n                Sign up\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { useMatches } from \"@remix-run/react\";\r\nimport { useMemo } from \"react\";\r\n\r\nimport type { User } from \"~/models/user.server\";\r\n\r\nconst DEFAULT_REDIRECT = \"/\";\r\n\r\n/**\r\n * This should be used any time the redirect path is user-provided\r\n * (Like the query string on our login/signup pages). This avoids\r\n * open-redirect vulnerabilities.\r\n * @param {string} to The redirect destination\r\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\r\n */\r\nexport function safeRedirect(\r\n  to: FormDataEntryValue | string | null | undefined,\r\n  defaultRedirect: string = DEFAULT_REDIRECT\r\n) {\r\n  if (!to || typeof to !== \"string\") {\r\n    return defaultRedirect;\r\n  }\r\n\r\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\r\n    return defaultRedirect;\r\n  }\r\n\r\n  return to;\r\n}\r\n\r\n/**\r\n * This base hook is used in other hooks to quickly search for specific data\r\n * across all loader data using useMatches.\r\n * @param {string} id The route id\r\n * @returns {JSON|undefined} The router data or undefined if not found\r\n */\r\nexport function useMatchesData(\r\n  id: string\r\n): Record<string, unknown> | undefined {\r\n  const matchingRoutes = useMatches();\r\n  const route = useMemo(\r\n    () => matchingRoutes.find((route) => route.id === id),\r\n    [matchingRoutes, id]\r\n  );\r\n  return route?.data;\r\n}\r\n\r\nfunction isUser(user: any): user is User {\r\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\r\n}\r\n\r\nexport function useOptionalUser(): User | undefined {\r\n  const data = useMatchesData(\"root\");\r\n  if (!data || !isUser(data.user)) {\r\n    return undefined;\r\n  }\r\n  return data.user;\r\n}\r\n\r\nexport function useUser(): User {\r\n  const maybeUser = useOptionalUser();\r\n  if (!maybeUser) {\r\n    throw new Error(\r\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\r\n    );\r\n  }\r\n  return maybeUser;\r\n}\r\n\r\nexport function validateEmail(email: unknown): email is string {\r\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\r\n}\r\n", "import type { LoaderArgs } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\r\n\r\nimport { requireUserId } from \"~/session.server\";\r\nimport { useUser } from \"~/utils\";\r\nimport { getNoteListItems } from \"~/models/note.server\";\r\n\r\nexport async function loader({ request }: LoaderArgs) {\r\n  const userId = await requireUserId(request);\r\n  const noteListItems = await getNoteListItems({ userId });\r\n  return json({ noteListItems });\r\n}\r\n\r\nexport default function NotesPage() {\r\n  const data = useLoaderData<typeof loader>();\r\n  const user = useUser();\r\n\r\n  return (\r\n    <div className=\"flex h-full min-h-screen flex-col\">\r\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\r\n        <h1 className=\"text-3xl font-bold\">\r\n          <Link to=\".\">Notes</Link>\r\n        </h1>\r\n        <p>{user.email}</p>\r\n        <Form action=\"/logout\" method=\"post\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </Form>\r\n      </header>\r\n\r\n      <main className=\"flex h-full bg-white\">\r\n        <div className=\"h-full w-80 border-r bg-gray-50\">\r\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\r\n            + New Note\r\n          </Link>\r\n\r\n          <hr />\r\n\r\n          {data.noteListItems.length === 0 ? (\r\n            <p className=\"p-4\">No notes yet</p>\r\n          ) : (\r\n            <ol>\r\n              {data.noteListItems.map((note) => (\r\n                <li key={note.id}>\r\n                  <NavLink\r\n                    className={({ isActive }) =>\r\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\r\n                    }\r\n                    to={note.id}\r\n                  >\r\n                    \uD83D\uDCDD {note.title}\r\n                  </NavLink>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"flex-1 p-6\">\r\n          <Outlet />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n", "import type { User, Note } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { Note } from \"@prisma/client\";\r\n\r\nexport function getNote({\r\n  id,\r\n  userId,\r\n}: Pick<Note, \"id\"> & {\r\n  userId: User[\"id\"];\r\n}) {\r\n  return prisma.note.findFirst({\r\n    select: { id: true, body: true, title: true },\r\n    where: { id, userId },\r\n  });\r\n}\r\n\r\nexport function getNoteListItems({ userId }: { userId: User[\"id\"] }) {\r\n  return prisma.note.findMany({\r\n    where: { userId },\r\n    select: { id: true, title: true },\r\n    orderBy: { updatedAt: \"desc\" },\r\n  });\r\n}\r\n\r\nexport function createNote({\r\n  body,\r\n  title,\r\n  userId,\r\n}: Pick<Note, \"body\" | \"title\"> & {\r\n  userId: User[\"id\"];\r\n}) {\r\n  return prisma.note.create({\r\n    data: {\r\n      title,\r\n      body,\r\n      user: {\r\n        connect: {\r\n          id: userId,\r\n        },\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nexport function deleteNote({\r\n  id,\r\n  userId,\r\n}: Pick<Note, \"id\"> & { userId: User[\"id\"] }) {\r\n  return prisma.note.deleteMany({\r\n    where: { id, userId },\r\n  });\r\n}\r\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\nimport { deleteNote } from \"~/models/note.server\";\r\nimport { getNote } from \"~/models/note.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\n\r\nexport async function loader({ request, params }: LoaderArgs) {\r\n  const userId = await requireUserId(request);\r\n  invariant(params.noteId, \"noteId not found\");\r\n\r\n  const note = await getNote({ userId, id: params.noteId });\r\n  if (!note) {\r\n    throw new Response(\"Not Found\", { status: 404 });\r\n  }\r\n  return json({ note });\r\n}\r\n\r\nexport async function action({ request, params }: ActionArgs) {\r\n  const userId = await requireUserId(request);\r\n  invariant(params.noteId, \"noteId not found\");\r\n\r\n  await deleteNote({ userId, id: params.noteId });\r\n\r\n  return redirect(\"/notes\");\r\n}\r\n\r\nexport default function NoteDetailsPage() {\r\n  const data = useLoaderData<typeof loader>();\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\r\n      <p className=\"py-6\">{data.note.body}</p>\r\n      <hr className=\"my-4\" />\r\n      <Form method=\"post\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ErrorBoundary({ error }: { error: Error }) {\r\n  console.error(error);\r\n\r\n  return <div>An unexpected error occurred: {error.message}</div>;\r\n}\r\n\r\nexport function CatchBoundary() {\r\n  const caught = useCatch();\r\n\r\n  if (caught.status === 404) {\r\n    return <div>Note not found</div>;\r\n  }\r\n\r\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\n\r\nexport default function NoteIndexPage() {\r\n  return (\r\n    <p>\r\n      No note selected. Select a note on the left, or{\" \"}\r\n      <Link to=\"new\" className=\"text-blue-500 underline\">\r\n        create a new note.\r\n      </Link>\r\n    </p>\r\n  );\r\n}\r\n", "import type { ActionArgs } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, useActionData } from \"@remix-run/react\";\r\nimport * as React from \"react\";\r\n\r\nimport { createNote } from \"~/models/note.server\";\r\nimport { requireUserId } from \"~/session.server\";\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const userId = await requireUserId(request);\r\n\r\n  const formData = await request.formData();\r\n  const title = formData.get(\"title\");\r\n  const body = formData.get(\"body\");\r\n\r\n  if (typeof title !== \"string\" || title.length === 0) {\r\n    return json(\r\n      { errors: { title: \"Title is required\", body: null } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof body !== \"string\" || body.length === 0) {\r\n    return json(\r\n      { errors: { title: null, body: \"Body is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const note = await createNote({ title, body, userId });\r\n\r\n  return redirect(`/notes/${note.id}`);\r\n}\r\n\r\nexport default function NewNotePage() {\r\n  const actionData = useActionData<typeof action>();\r\n  const titleRef = React.useRef<HTMLInputElement>(null);\r\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (actionData?.errors?.title) {\r\n      titleRef.current?.focus();\r\n    } else if (actionData?.errors?.body) {\r\n      bodyRef.current?.focus();\r\n    }\r\n  }, [actionData]);\r\n\r\n  return (\r\n    <Form\r\n      method=\"post\"\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: 8,\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div>\r\n        <label className=\"flex w-full flex-col gap-1\">\r\n          <span>Title: </span>\r\n          <input\r\n            ref={titleRef}\r\n            name=\"title\"\r\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\r\n            aria-invalid={actionData?.errors?.title ? true : undefined}\r\n            aria-errormessage={\r\n              actionData?.errors?.title ? \"title-error\" : undefined\r\n            }\r\n          />\r\n        </label>\r\n        {actionData?.errors?.title && (\r\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\r\n            {actionData.errors.title}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"flex w-full flex-col gap-1\">\r\n          <span>Body: </span>\r\n          <textarea\r\n            ref={bodyRef}\r\n            name=\"body\"\r\n            rows={8}\r\n            className=\"w-full flex-1 rounded-md border-2 border-blue-500 py-2 px-3 text-lg leading-6\"\r\n            aria-invalid={actionData?.errors?.body ? true : undefined}\r\n            aria-errormessage={\r\n              actionData?.errors?.body ? \"body-error\" : undefined\r\n            }\r\n          />\r\n        </label>\r\n        {actionData?.errors?.body && (\r\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\r\n            {actionData.errors.body}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"text-right\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"rounded bg-blue-500 py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n", "import type { ActionArgs, LoaderArgs, MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\r\nimport * as React from \"react\";\r\n\r\nimport { getUserId, createUserSession } from \"~/session.server\";\r\n\r\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\r\nimport { safeRedirect, validateEmail } from \"~/utils\";\r\n\r\nexport async function loader({ request }: LoaderArgs) {\r\n  const userId = await getUserId(request);\r\n  if (userId) return redirect(\"/\");\r\n  return json({});\r\n}\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const formData = await request.formData();\r\n  const email = formData.get(\"email\");\r\n  const password = formData.get(\"password\");\r\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\r\n\r\n  if (!validateEmail(email)) {\r\n    return json(\r\n      { errors: { email: \"Email is invalid\", password: null } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (typeof password !== \"string\" || password.length === 0) {\r\n    return json(\r\n      { errors: { email: null, password: \"Password is required\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  if (password.length < 8) {\r\n    return json(\r\n      { errors: { email: null, password: \"Password is too short\" } },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const existingUser = await getUserByEmail(email);\r\n  if (existingUser) {\r\n    return json(\r\n      {\r\n        errors: {\r\n          email: \"A user already exists with this email\",\r\n          password: null,\r\n        },\r\n      },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const user = await createUser(email, password);\r\n\r\n  return createUserSession({\r\n    request,\r\n    userId: user.id,\r\n    remember: false,\r\n    redirectTo,\r\n  });\r\n}\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return {\r\n    title: \"Sign Up\",\r\n  };\r\n};\r\n\r\nexport default function Join() {\r\n  const [searchParams] = useSearchParams();\r\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\r\n  const actionData = useActionData<typeof action>();\r\n  const emailRef = React.useRef<HTMLInputElement>(null);\r\n  const passwordRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (actionData?.errors?.email) {\r\n      emailRef.current?.focus();\r\n    } else if (actionData?.errors?.password) {\r\n      passwordRef.current?.focus();\r\n    }\r\n  }, [actionData]);\r\n\r\n  return (\r\n    <div className=\"flex min-h-full flex-col justify-center\">\r\n      <div className=\"mx-auto w-full max-w-md px-8\">\r\n        <Form method=\"post\" className=\"space-y-6\">\r\n          <div>\r\n            <label\r\n              htmlFor=\"email\"\r\n              className=\"block text-sm font-medium text-gray-700\"\r\n            >\r\n              Email address\r\n            </label>\r\n            <div className=\"mt-1\">\r\n              <input\r\n                ref={emailRef}\r\n                id=\"email\"\r\n                required\r\n                autoFocus={true}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                aria-invalid={actionData?.errors?.email ? true : undefined}\r\n                aria-describedby=\"email-error\"\r\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\r\n              />\r\n              {actionData?.errors?.email && (\r\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\r\n                  {actionData.errors.email}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"password\"\r\n              className=\"block text-sm font-medium text-gray-700\"\r\n            >\r\n              Password\r\n            </label>\r\n            <div className=\"mt-1\">\r\n              <input\r\n                id=\"password\"\r\n                ref={passwordRef}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"new-password\"\r\n                aria-invalid={actionData?.errors?.password ? true : undefined}\r\n                aria-describedby=\"password-error\"\r\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\r\n              />\r\n              {actionData?.errors?.password && (\r\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\r\n                  {actionData.errors.password}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\r\n          >\r\n            Create Account\r\n          </button>\r\n          <div className=\"flex items-center justify-center\">\r\n            <div className=\"text-center text-sm text-gray-500\">\r\n              Already have an account?{\" \"}\r\n              <Link\r\n                className=\"text-blue-500 underline\"\r\n                to={{\r\n                  pathname: \"/login\",\r\n                  search: searchParams.toString(),\r\n                }}\r\n              >\r\n                Log in\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "export default {'version':'ee2b4baa','entry':{'module':'/build/entry.client-IURSTHHG.js','imports':['/build/_shared/chunk-FQMSJ6VX.js','/build/_shared/chunk-NTN7YPXJ.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-JW55CUGH.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/healthcheck':{'id':'routes/healthcheck','parentId':'root','path':'healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthcheck-EYKE7FND.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-S2QNVLPV.js','imports':['/build/_shared/chunk-SUOXNGK2.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/build/routes/join-VKGORNPS.js','imports':['/build/_shared/chunk-BSRRWFSI.js','/build/_shared/chunk-FYK6VOXQ.js','/build/_shared/chunk-XMI3USBO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-HQUKMP7N.js','imports':['/build/_shared/chunk-BSRRWFSI.js','/build/_shared/chunk-FYK6VOXQ.js','/build/_shared/chunk-XMI3USBO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-I5MEE2F6.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes-FY4S3PYC.js','imports':['/build/_shared/chunk-FYK6VOXQ.js','/build/_shared/chunk-ATZBVMZP.js','/build/_shared/chunk-XMI3USBO.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/$noteId':{'id':'routes/notes/$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes/$noteId-3EW2IUJM.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/notes/index':{'id':'routes/notes/index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/notes/index-3J6CZDN7.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/new':{'id':'routes/notes/new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes/new-PLRZ2YG4.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/$slug':{'id':'routes/posts/$slug','parentId':'root','path':'posts/:slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts/$slug-MAQZOPMN.js','imports':['/build/_shared/chunk-OHS2H7Y6.js','/build/_shared/chunk-SUOXNGK2.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/admin':{'id':'routes/posts/admin','parentId':'root','path':'posts/admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts/admin-ID7RBPTI.js','imports':['/build/_shared/chunk-SUOXNGK2.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/admin/$slug':{'id':'routes/posts/admin/$slug','parentId':'routes/posts/admin','path':':slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts/admin/$slug-7GQ7PEFJ.js','imports':['/build/_shared/chunk-OHS2H7Y6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/admin/index':{'id':'routes/posts/admin/index','parentId':'routes/posts/admin','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/posts/admin/index-TUOFQN3A.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/admin/new':{'id':'routes/posts/admin/new','parentId':'routes/posts/admin','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/posts/admin/new-WKLUEIJY.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/posts/index':{'id':'routes/posts/index','parentId':'root','path':'posts','index':true,'caseSensitive':undefined,'module':'/build/routes/posts/index-S34WPS6D.js','imports':['/build/_shared/chunk-SUOXNGK2.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-EE2B4BAA.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\healthcheck.tsx\";\nimport * as route2 from \"./routes\\\\posts\\\\$slug.tsx\";\nimport * as route3 from \"./routes\\\\posts\\\\admin.tsx\";\nimport * as route4 from \"./routes\\\\posts\\\\admin\\\\$slug.tsx\";\nimport * as route5 from \"./routes\\\\posts\\\\admin\\\\index.tsx\";\nimport * as route6 from \"./routes\\\\posts\\\\admin\\\\new.tsx\";\nimport * as route7 from \"./routes\\\\posts\\\\index.tsx\";\nimport * as route8 from \"./routes\\\\logout.tsx\";\nimport * as route9 from \"./routes\\\\index.tsx\";\nimport * as route10 from \"./routes\\\\login.tsx\";\nimport * as route11 from \"./routes\\\\notes.tsx\";\nimport * as route12 from \"./routes\\\\notes\\\\$noteId.tsx\";\nimport * as route13 from \"./routes\\\\notes\\\\index.tsx\";\nimport * as route14 from \"./routes\\\\notes\\\\new.tsx\";\nimport * as route15 from \"./routes\\\\join.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/healthcheck\": {\n      id: \"routes/healthcheck\",\n      parentId: \"root\",\n      path: \"healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/posts/$slug\": {\n      id: \"routes/posts/$slug\",\n      parentId: \"root\",\n      path: \"posts/:slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/posts/admin\": {\n      id: \"routes/posts/admin\",\n      parentId: \"root\",\n      path: \"posts/admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/posts/admin/$slug\": {\n      id: \"routes/posts/admin/$slug\",\n      parentId: \"routes/posts/admin\",\n      path: \":slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/posts/admin/index\": {\n      id: \"routes/posts/admin/index\",\n      parentId: \"routes/posts/admin\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/posts/admin/new\": {\n      id: \"routes/posts/admin/new\",\n      parentId: \"routes/posts/admin\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/posts/index\": {\n      id: \"routes/posts/index\",\n      parentId: \"root\",\n      path: \"posts\",\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/notes/$noteId\": {\n      id: \"routes/notes/$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/notes/index\": {\n      id: \"routes/notes/index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/notes/new\": {\n      id: \"routes/notes/new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    }\n  };"],
  "mappings": "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",
  "names": []
}
